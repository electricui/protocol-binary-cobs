import 'mocha'

import * as chai from 'chai'
import { resolveAny } from 'dns'

import { encode } from '../src/cobs'

const assert = chai.assert

function generateEncoderEqualityTest(testCase: Buffer, reference: Buffer) {
  return () => {
    const out = encode(testCase)

    assert.deepEqual(out, reference)
  }
}
/*
function printBuf(buf: Buffer) {
  let str = '{ '

  let i = 0
  for (const b of buf) {
    str = `${str}0x${Buffer.from([b]).toString('hex')}, `
    i++
    if (i == 15) {
      str += '\n'
      i = 0
    }
  }

  str += ' }'

  console.log(str)
}
*/
describe('COBS Encoder', () => {
  it(
    'correctly encodes a single 0x00',
    generateEncoderEqualityTest(
      Buffer.from([0x00]),
      Buffer.from([0x00, 0x01, 0x01, 0x00]),
    ),
  )

  it(
    'correctly encodes two 0x00s',
    generateEncoderEqualityTest(
      Buffer.from([0x00, 0x00]),
      Buffer.from([0x00, 0x01, 0x01, 0x01, 0x00]),
    ),
  )

  it(
    'correctly encodes 11 22 00 33',
    generateEncoderEqualityTest(
      Buffer.from([0x11, 0x22, 0x00, 0x33]),
      Buffer.from([0x00, 0x03, 0x11, 0x22, 0x02, 0x33, 0x00]),
    ),
  )

  it(
    'correctly encodes two 0x00s',
    generateEncoderEqualityTest(
      Buffer.from([0x11, 0x22, 0x33, 0x44]),
      Buffer.from([0x00, 0x05, 0x11, 0x22, 0x33, 0x44, 0x00]),
    ),
  )

  it(
    'correctly encodes a large Buffer (> 255 bytes)',
    generateEncoderEqualityTest(
      Buffer.from(Array(257).join('ee'), 'hex'),

      Buffer.from([
        0x00,
        0xff,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0xee,
        0x03,
        0xee,
        0xee,
        0x00,
      ]),
    ),
  )
})
